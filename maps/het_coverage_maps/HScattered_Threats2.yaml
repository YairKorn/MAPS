# A map for advarserial coverage environment

agents_placement: [[1, 3], [1, 2], [4, 3]]    # if random_placement is False, location can be specified
agents_type: [0, 1, 1]
n_agents: 3

# Obstacles are defined as follows: [X, Y]
obstacles_location: [
    [1, 4],
    [2, 2],
    [2, 3],
    [2, 6],
    [3, 1],
    [3, 6],
    [4, 2],
    [4, 4],
    [6, 4],
]  # specified location of obstacles in the grid

# Threats are defined as follows: [X, Y, INTENSITY, TYPE]
threat_location: [
    [0, 1, 0.2, 0],
    [2, 0, 0.6, 0],
    [2, 1, 0.6, 0],
    [2, 4, 0.4, 0],
    [3, 3, 0.4, 0],
    [6, 3, 0.4, 0],
    [6, 7, 0.4, 0],
    [7, 0, 0.2, 0],
    [7, 1, 0.2, 0],
    [7, 7, 0.5, 0],

    [0, 5, 0.9, 1],
    [1, 7, 0.4, 1],
    [2, 7, 0.4, 1],
    [4, 6, 0.7, 1],
    [5, 1, 0.3, 1],
    [5, 4, 0.6, 1],
    [5, 5, 0.8, 1],
    [6, 0, 0.3, 1],
]     # specified location and severty of threats in the grid

# Types matrix is n_agents on n_types matrix. The [i,j] cell describes the threat on agent of type i in a threatened cell of type j
# if types matrix is smaller than n_agents x n_types, an error is raised
types_matrix: [
    [1.0, 0.15],
    [0.15, 1.0]
]

toroidal: False         # whether the world is bounded (False) or toroidal (True)
world_shape: [8, 8]     # the shape of the grid-world [height, width]
random_placement: False # location of agents is randomized every episode