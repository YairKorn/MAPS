# A map for advarserial coverage environment

agents_placement: [[3, 3], [3, 5], [5, 3], [5, 5]]    # if random_placement is False, location can be specified
agents_type: [0, 1, 0, 1]
n_agents: 4

# Obstacles are defined as follows: [X, Y]
obstacles_location: [
    [0, 3], [0, 5], [2, 3], [2, 5], [3, 0], [3, 2], [3, 6], [3, 8], [5, 0], [5, 2], [5, 6], [5, 8], [6, 3], [6, 5], [8, 3], [8, 5]
]  # specified location of obstacles in the grid

# Threats are defined as follows: [X, Y, INTENSITY, TYPE]
threat_location: [
    [0, 0, 0.3, 0],
    [0, 1, 0.3, 0],
    [1, 6, 0.2, 0],
    [2, 4, 0.3, 0],
    [4, 2, 0.2, 0],
    [4, 7, 0.3, 0],
    [6, 1, 0.2, 0],
    [7, 2, 0.1, 0],
    [7, 7, 0.5, 0],
    [8, 6, 0.3, 0],
    [0, 8, 0.6, 1],
    [1, 8, 0.6, 1],
    [2, 8, 0.4, 1],
    [1, 2, 0.3, 1],
    [2, 1, 0.2, 1],
    [4, 5, 0.1, 1],
    [6, 4, 0.3, 1],
    [6, 7, 0.2, 1],
    [7, 5, 0.2, 1],
    [8, 0, 0.4, 1],
    [8, 1, 0.3, 1],
]     # specified location and severty of threats in the grid

# Types matrix is n_agents on n_types matrix. The [i,j] cell describes the threat on agent of type i in a threatened cell of type j
# if types matrix is smaller than n_agents x n_types, an error is raised
types_matrix: [
    [1.0, 0.2],
    [0.3, 1.0],
]

toroidal: False         # whether the world is bounded (False) or toroidal (True)
world_shape: [9, 9]   # the shape of the grid-world [height, width]
random_placement: False # location of agents is randomized every episode